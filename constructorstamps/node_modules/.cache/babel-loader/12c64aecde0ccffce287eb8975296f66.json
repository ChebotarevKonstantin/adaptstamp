{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/konstantin/Adapt/constructorstamps/src/components/ConstructorStamps/Constructor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Template from './Template';\nimport style from './Constructor.module.css';\nimport ConstructorString from './ConstructorString';\n\nfunction Constructor({\n  setHeading,\n  setString,\n  setNewstring\n}) {\n  _s();\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  const [newString, setNewString] = useState([]);\n  const strings = [{\n    title: \"Универсальный шаблон\",\n    content: 'Текст',\n    subcontent: \"\"\n  }, {\n    title: \"Подпись с расшифровкой\",\n    content: \"______/_______\",\n    subcontent: \"наименование\"\n  }, {\n    title: \"Должность и подпись\",\n    content: \"Гл.Бухгалтер_______\",\n    subcontent: \"\"\n  }, {\n    title: \"Дата\",\n    content: '\"__\"_______20___г.',\n    subcontent: \"\"\n  }, {\n    title: \"Дата и подпись\",\n    content: '\"__\"_______20___г. Подпись_______',\n    subcontent: \"\"\n  }, {\n    title: \"ФИО\",\n    content: 'ФИО_____________',\n    subcontent: \"\"\n  }, {\n    title: \"Свободная строка\",\n    content: '_____________',\n    subcontent: \"наименование\"\n  }];\n\n  const addToStamp = item => {\n    if (item.title == \"Универсальный шаблон\") {\n      setNewString(prev => [...prev, Math.random()]);\n    } else {\n      setString(prev => [...prev, item]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        onChange: e => setHeading(e.target.value),\n        placeholder: \"\\u041A \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0443 \\u0440\\u0430\\u0431\\u043E\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), newString && newString.map(item => /*#__PURE__*/_jsxDEV(ConstructorString, {\n      setNewstring: setNewstring\n    }, (index + 4) * Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 45\n    }, this)), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.contanerr,\n      children: strings && strings.map((item, index) => /*#__PURE__*/_jsxDEV(Template, {\n        onClick: () => addToStamp(item),\n        item: item\n      }, (index + 5) * Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Constructor, \"2d4nphKZAyGv6PXZno0YkP0rVTU=\");\n\n_c = Constructor;\nexport default Constructor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Constructor\");","map":{"version":3,"sources":["/home/konstantin/Adapt/constructorstamps/src/components/ConstructorStamps/Constructor.js"],"names":["React","useEffect","useRef","useState","Template","style","ConstructorString","Constructor","setHeading","setString","setNewstring","inputRef","current","focus","newString","setNewString","strings","title","content","subcontent","addToStamp","item","prev","Math","random","e","target","value","map","index","contanerr"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAArB,EAA8D;AAAA;;AAC5D,QAAMC,QAAQ,GAAGT,MAAM,EAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAMa,OAAO,GAAG,CAAC;AACfC,IAAAA,KAAK,EAAE,sBADQ;AAEfC,IAAAA,OAAO,EAAE,OAFM;AAGfC,IAAAA,UAAU,EAAE;AAHG,GAAD,EAKhB;AACEF,IAAAA,KAAK,EAAE,wBADT;AAEEC,IAAAA,OAAO,EAAE,gBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GALgB,EAUhB;AACEF,IAAAA,KAAK,EAAE,qBADT;AAEEC,IAAAA,OAAO,EAAE,qBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GAVgB,EAehB;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,OAAO,EAAE,oBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GAfgB,EAoBhB;AACEF,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,OAAO,EAAE,mCAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GApBgB,EAyBhB;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,OAAO,EAAE,kBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GAzBgB,EA8BhB;AACEF,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,OAAO,EAAE,eAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GA9BgB,CAAhB;;AAqCA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAIA,IAAI,CAACJ,KAAL,IAAc,sBAAlB,EAA0C;AACxCF,MAAAA,YAAY,CAAEO,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAUC,IAAI,CAACC,MAAL,EAAV,CAAT,CAAZ;AACD,KAFD,MAEO;AACLf,MAAAA,SAAS,CAAEa,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,IAAV,CAAX,CAAT;AACD;AACF,GAND;;AAOA,sBACE;AAAA,sFAEE;AAAA,6BACE;AAAO,QAAA,GAAG,EAAEV,QAAZ;AAAsB,QAAA,QAAQ,EAAGc,CAAD,IAAOjB,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;AAAmE,QAAA,WAAW,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGb,SAAS,IAAIA,SAAS,CAACc,GAAV,CAAeP,IAAD,iBAAU,QAAC,iBAAD;AAAoD,MAAA,YAAY,EAAEX;AAAlE,OAAwB,CAACmB,KAAK,GAAG,CAAT,IAAaN,IAAI,CAACC,MAAL,EAArC;AAAA;AAAA;AAAA;AAAA,YAAxB,CALhB,wGAOE;AAAK,MAAA,SAAS,EAAEnB,KAAK,CAACyB,SAAtB;AAAA,gBACGd,OAAO,IAAIA,OAAO,CAACY,GAAR,CAAY,CAACP,IAAD,EAAOQ,KAAP,kBAAiB,QAAC,QAAD;AAA4C,QAAA,OAAO,EAAE,MAAMT,UAAU,CAACC,IAAD,CAArE;AAA6E,QAAA,IAAI,EAAEA;AAAnF,SAAe,CAACQ,KAAK,GAAG,CAAT,IAAcN,IAAI,CAACC,MAAL,EAA7B;AAAA;AAAA;AAAA;AAAA,cAA7B;AADd;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjEQjB,W;;KAAAA,W;AAmET,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Template from './Template';\nimport style from './Constructor.module.css'\nimport ConstructorString from './ConstructorString';\n\n\nfunction Constructor({ setHeading, setString, setNewstring }) {\n  const inputRef = useRef()\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n  const [newString, setNewString] = useState([])\n\n\n  const strings = [{\n    title: \"Универсальный шаблон\",\n    content: 'Текст',\n    subcontent: \"\"\n  },\n  {\n    title: \"Подпись с расшифровкой\",\n    content: \"______/_______\",\n    subcontent: \"наименование\"\n  },\n  {\n    title: \"Должность и подпись\",\n    content: \"Гл.Бухгалтер_______\",\n    subcontent: \"\"\n  },\n  {\n    title: \"Дата\",\n    content: '\"__\"_______20___г.',\n    subcontent: \"\"\n  },\n  {\n    title: \"Дата и подпись\",\n    content: '\"__\"_______20___г. Подпись_______',\n    subcontent: \"\"\n  },\n  {\n    title: \"ФИО\",\n    content: 'ФИО_____________',\n    subcontent: \"\"\n  },\n  {\n    title: \"Свободная строка\",\n    content: '_____________',\n    subcontent: \"наименование\"\n  },\n\n  ]\n  const addToStamp = (item) => {\n    if (item.title == \"Универсальный шаблон\") {\n      setNewString((prev)=>[...prev, Math.random()])\n    } else {\n      setString((prev) => [...prev, item])\n    }\n  }\n  return (\n    <div>\n      Заголовок\n      <div>\n        <input ref={inputRef} onChange={(e) => setHeading(e.target.value)} placeholder='К производству работ' />\n      </div>\n      {newString && newString.map((item,)=> <ConstructorString key={(index + 4)* Math.random()} setNewstring={setNewstring}/>)}\n      Добавить строку\n      <div className={style.contanerr}>\n        {strings && strings.map((item, index) => <Template key={(index + 5) * Math.random()} onClick={() => addToStamp(item)} item={item} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default Constructor;\n"]},"metadata":{},"sourceType":"module"}