{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/konstantin/Adapt/constructorstamps/src/components/ConstructorStamps/ConstructorString.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport style from './ConstructorString.module.css';\nimport NewString from './NewString';\n\nfunction ConstructorString({\n  setNewstring\n}) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [subtext, setSubtext] = useState('');\n  const newstring = {\n    content: text,\n    subcontent: subtext\n  };\n  const [newstr, setNewstr] = useState([]);\n\n  const addText = () => {\n    setNewstr(prev => [...prev, newstring]);\n  };\n\n  useEffect(() => {\n    setNewstring(prev => [newstring]);\n  }, [text, subtext]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.contaner,\n    children: [/*#__PURE__*/_jsxDEV(NewString, {\n      setText: setText,\n      setSubtext: setSubtext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newstr && newstr.map(item => /*#__PURE__*/_jsxDEV(NewString, {\n        item: item,\n        setText: setText,\n        setSubtext: setSubtext\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addText,\n      className: style.button,\n      children: \"+\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u0434\\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConstructorString, \"1N0/iev+b1hpikkPZPa+93W4+OU=\");\n\n_c = ConstructorString;\nexport default ConstructorString;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConstructorString\");","map":{"version":3,"sources":["/home/konstantin/Adapt/constructorstamps/src/components/ConstructorStamps/ConstructorString.js"],"names":["React","useEffect","useState","style","NewString","ConstructorString","setNewstring","text","setText","subtext","setSubtext","newstring","content","subcontent","newstr","setNewstr","addText","prev","contaner","map","item","Math","random","button"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA6C;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,SAAS,GAAG;AAChBC,IAAAA,OAAO,EAAEL,IADO;AAEhBM,IAAAA,UAAU,EAAEJ;AAFI,GAAlB;AAIA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMc,OAAO,GAAG,MAAM;AACpBD,IAAAA,SAAS,CAAEE,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUN,SAAV,CAAX,CAAT;AACD,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAAEW,IAAD,IAAU,CAACN,SAAD,CAAX,CAAZ;AACD,GAFQ,EAEN,CAACJ,IAAD,EAAOE,OAAP,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEN,KAAK,CAACe,QAAtB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEV,OAApB;AAA6B,MAAA,UAAU,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGI,MAAM,IAAIA,MAAM,CAACK,GAAP,CAAYC,IAAD,iBAAU,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,IAAjB;AAAuB,QAAA,OAAO,EAAEZ,OAAhC;AAAyC,QAAA,UAAU,EAAEE;AAArD,SAAsEW,IAAI,CAACC,MAAL,EAAtE;AAAA;AAAA;AAAA;AAAA,cAArB;AADb;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAA0B,MAAA,SAAS,EAAEb,KAAK,CAACoB,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1BQlB,iB;;KAAAA,iB;AA4BT,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport style from './ConstructorString.module.css'\nimport NewString from './NewString';\n\n\nfunction ConstructorString({ setNewstring }) {\n  const [text, setText] = useState('')\n  const [subtext, setSubtext] = useState('')\n  const newstring = {\n    content: text,\n    subcontent: subtext\n  }\n  const [newstr, setNewstr] = useState([])\n\n  const addText = () => {\n    setNewstr((prev) => [...prev, newstring])\n  }\n\n  useEffect(() => {\n    setNewstring((prev) => [newstring])\n  }, [text, subtext])\n\n  return (\n    <div className={style.contaner}>\n      <NewString setText={setText} setSubtext={setSubtext} />\n      <div>\n        {newstr && newstr.map((item) => <NewString item={item} setText={setText} setSubtext={setSubtext} key={Math.random()}/>)}\n      </div>\n      <button onClick={addText} className={style.button}>+Добавить подстроку</button>\n    </div>\n  );\n}\n\nexport default ConstructorString;\n"]},"metadata":{},"sourceType":"module"}