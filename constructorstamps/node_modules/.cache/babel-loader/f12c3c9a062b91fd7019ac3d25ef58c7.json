{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/konstantin/Adapt/constructorstamps/src/components/ConstructorStamps/Constructor.js\";\nimport React from 'react';\nimport Template from './Template';\n\nfunction Constructor({\n  setHeading,\n  setString\n}) {\n  const strings = [{\n    title: \"Подпись с расшифровкой\",\n    content: \"______/_______\",\n    subcontent: \"наименование\"\n  }, {\n    title: \"Должность и подпись\",\n    content: \"Гл.Бухгалтер_______\",\n    subcontent: \"\"\n  }, {\n    title: \"Дата\",\n    content: '\"__\"_______20___г.',\n    subcontent: \"\"\n  }, {\n    title: \"Дата и подпись\",\n    content: '\"__\"_______20___г. Подпись_______',\n    subcontent: \"\"\n  }, {\n    title: \"ФИО\",\n    content: 'ФИО_____________',\n    subcontent: \"\"\n  }, {\n    title: \"Свободная строка\",\n    content: '_____________',\n    subcontent: \"наименование\"\n  }, {\n    title: \"Универсальный шаблон\",\n    content: 'Текст',\n    subcontent: \"\"\n  }];\n\n  const addToStamp = item => {\n    if (item.title == \"Универсальный шаблон\") {\n      console.log(item);\n    } else {\n      setString(prev => [...prev, item.title]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setHeading(e.target.value),\n        placeholder: \"\\u041A \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0443 \\u0440\\u0430\\u0431\\u043E\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: strings && strings.map((item, index) => /*#__PURE__*/_jsxDEV(Template, {\n        onClick: () => addToStamp(item),\n        item: item\n      }, (index + 5) * Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Constructor;\nexport default Constructor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Constructor\");","map":{"version":3,"sources":["/home/konstantin/Adapt/constructorstamps/src/components/ConstructorStamps/Constructor.js"],"names":["React","Template","Constructor","setHeading","setString","strings","title","content","subcontent","addToStamp","item","console","log","prev","e","target","value","map","index","Math","random"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAArB,EAAgD;AAC9C,QAAMC,OAAO,GAAG,CAAC;AACfC,IAAAA,KAAK,EAAE,wBADQ;AAEfC,IAAAA,OAAO,EAAE,gBAFM;AAGfC,IAAAA,UAAU,EAAE;AAHG,GAAD,EAKhB;AACEF,IAAAA,KAAK,EAAE,qBADT;AAEEC,IAAAA,OAAO,EAAE,qBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GALgB,EAUhB;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,OAAO,EAAE,oBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GAVgB,EAehB;AACEF,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,OAAO,EAAE,mCAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GAfgB,EAoBhB;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,OAAO,EAAE,kBAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GApBgB,EAyBhB;AACEF,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,OAAO,EAAE,eAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GAzBgB,EA8BhB;AACEF,IAAAA,KAAK,EAAE,sBADT;AAEEC,IAAAA,OAAO,EAAE,OAFX;AAGEC,IAAAA,UAAU,EAAE;AAHd,GA9BgB,CAAhB;;AAoCA,QAAMC,UAAU,GAAIC,IAAD,IAAQ;AACzB,QAAGA,IAAI,CAACJ,KAAL,IAAc,sBAAjB,EAAwC;AAC5CK,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACK,KAFD,MAEK;AACHN,MAAAA,SAAS,CAAES,IAAD,IAAS,CAAC,GAAGA,IAAJ,EAAUH,IAAI,CAACJ,KAAf,CAAV,CAAT;AACD;AACF,GAND;;AAOA,sBACE;AAAA,sFAEE;AAAA,6BACE;AAAO,QAAA,QAAQ,EAAGQ,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlC;AAAoD,QAAA,WAAW,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,wGAME;AAAA,gBACGX,OAAO,IAAIA,OAAO,CAACY,GAAR,CAAY,CAACP,IAAD,EAAOQ,KAAP,kBAAiB,QAAC,QAAD;AAA4C,QAAA,OAAO,EAAE,MAAMT,UAAU,CAACC,IAAD,CAArE;AAA6E,QAAA,IAAI,EAAEA;AAAnF,SAAe,CAACQ,KAAK,GAAG,CAAT,IAAcC,IAAI,CAACC,MAAL,EAA7B;AAAA;AAAA;AAAA;AAAA,cAA7B;AADd;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAxDQlB,W;AA0DT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport Template from './Template';\n\nfunction Constructor({ setHeading, setString }) {\n  const strings = [{\n    title: \"Подпись с расшифровкой\",\n    content: \"______/_______\",\n    subcontent: \"наименование\"\n  },\n  {\n    title: \"Должность и подпись\",\n    content: \"Гл.Бухгалтер_______\",\n    subcontent: \"\"\n  },\n  {\n    title: \"Дата\",\n    content: '\"__\"_______20___г.',\n    subcontent: \"\"\n  },\n  {\n    title: \"Дата и подпись\",\n    content: '\"__\"_______20___г. Подпись_______',\n    subcontent: \"\"\n  },\n  {\n    title: \"ФИО\",\n    content: 'ФИО_____________',\n    subcontent: \"\"\n  },\n  {\n    title: \"Свободная строка\",\n    content: '_____________',\n    subcontent: \"наименование\"\n  },\n  {\n    title: \"Универсальный шаблон\",\n    content: 'Текст',\n    subcontent: \"\"\n  },\n  ]\n  const addToStamp = (item)=>{\n    if(item.title == \"Универсальный шаблон\"){\nconsole.log(item)\n    }else{\n      setString((prev)=> [...prev, item.title])\n    }\n  }\n  return (\n    <div>\n      Заголовок\n      <div>\n        <input onChange={(e) => setHeading(e.target.value)} placeholder='К производству работ' />\n      </div>\n      Добавить строку\n      <div>\n        {strings && strings.map((item, index) => <Template key={(index + 5) * Math.random()} onClick={() => addToStamp(item)} item={item}/>)}\n      </div>\n    </div>\n  );\n}\n\nexport default Constructor;\n"]},"metadata":{},"sourceType":"module"}